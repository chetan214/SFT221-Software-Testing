<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.8"/>
    <errors>
        <error id="shadowVariable" severity="style" msg="Local variable &amp;#039;log&amp;#039; shadows outer variable" verbose="Local variable &amp;#039;log&amp;#039; shadows outer variable" cwe="398" file0="Solution_week6SFT/week6SFT/log4c.c" sinceDate="M/d/yyyy">
            <location file="Solution_week6SFT\week6SFT\log4c.c" line="40" info="Shadow variable"/>
            <location file="Solution_week6SFT\week6SFT\log4c.h" line="32" info="Shadowed declaration"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &amp;#039;log&amp;#039; shadows outer variable" verbose="Local variable &amp;#039;log&amp;#039; shadows outer variable" cwe="398" file0="Solution_week6SFT/week6SFT/main.c" sinceDate="M/d/yyyy">
            <location file="Solution_week6SFT\week6SFT\main.c" line="11" info="Shadow variable"/>
            <location file="Solution_week6SFT\week6SFT\log4c.h" line="32" info="Shadowed declaration"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;str[i]==&amp;#039;\0&amp;#039;&amp;#039; is always false" verbose="Condition &amp;#039;str[i]==&amp;#039;\0&amp;#039;&amp;#039; is always false" cwe="570" file0="Solution_week6SFT/week6SFT/stringhelp.c" sinceDate="M/d/yyyy">
            <location file="Solution_week6SFT\week6SFT\stringhelp.c" line="56"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="Solution_week6SFT/week6SFT/stringhelp.c" sinceDate="M/d/yyyy">
            <location file="Solution_week6SFT\week6SFT\stringhelp.c" line="100"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;sp&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;sp&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="Solution_week6SFT/week6SFT/stringhelp.c" sinceDate="M/d/yyyy">
            <location file="Solution_week6SFT\week6SFT\stringhelp.c" line="100"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;start&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;start&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="Solution_week6SFT/week6SFT/stringhelp.c" sinceDate="M/d/yyyy">
            <location file="Solution_week6SFT\week6SFT\stringhelp.c" line="100"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;i&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;i&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="Solution_week6SFT/week6SFT/stringhelp.c" sinceDate="M/d/yyyy">
            <location file="Solution_week6SFT\week6SFT\stringhelp.c" line="118"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;sp&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;sp&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="Solution_week6SFT/week6SFT/stringhelp.c" sinceDate="M/d/yyyy">
            <location file="Solution_week6SFT\week6SFT\stringhelp.c" line="118"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;start&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;start&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="Solution_week6SFT/week6SFT/stringhelp.c" sinceDate="M/d/yyyy">
            <location file="Solution_week6SFT\week6SFT\stringhelp.c" line="118"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &amp;#039;log&amp;#039; shadows outer variable" verbose="Local variable &amp;#039;log&amp;#039; shadows outer variable" cwe="398" file0="Solution_week6SFT/week6SFT/stringhelp.c" sinceDate="M/d/yyyy">
            <location file="Solution_week6SFT\week6SFT\stringhelp.c" line="34" info="Shadow variable"/>
            <location file="Solution_week6SFT\week6SFT\log4c.h" line="32" info="Shadowed declaration"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;buf&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;buf&amp;#039; is assigned a value that is never used." cwe="563" file0="Solution_week6SFT/week6SFT/stringhelp.c" sinceDate="M/d/yyyy">
            <location file="Solution_week6SFT\week6SFT\stringhelp.c" line="39"/>
        </error>
    </errors>
</results>
